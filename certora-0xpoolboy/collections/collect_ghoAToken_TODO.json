{"original": "https://prover.certora.com/jobStatus/36946/02fc83455d9b4e32a27931bbd66fa5fb?anonymousKey=aecf040cf35bcec6625b193407216064126b935d", "mutants": [{"gambit_mutant": {"filename": "gambit_out/mutants/1/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/1", "id": "1", "diff": "--- original\n+++ mutant\n@@ -67,7 +67,8 @@\n     string calldata aTokenSymbol,\n     bytes calldata params\n   ) external override initializer {\n-    require(initializingPool == POOL, Errors.POOL_ADDRESSES_DO_NOT_MATCH);\n+    /// DeleteExpressionMutation(`require(initializingPool == POOL, Errors.POOL_ADDRESSES_DO_NOT_MATCH)` |==> `assert(true)`) of: `require(initializingPool == POOL, Errors.POOL_ADDRESSES_DO_NOT_MATCH);`\n+    assert(true);\n     _setName(aTokenName);\n     _setSymbol(aTokenSymbol);\n     _setDecimals(aTokenDecimals);\n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/36946/eca531dbcb39425383cb9535ae8ac076?anonymousKey=85deeb8fb2101683a8a4e2997e0e3f2d59ce5a23", "success": true, "run_directory": ".certora_internal/23_10_09_14_25_37_379/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/2/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/2", "id": "2", "diff": "--- original\n+++ mutant\n@@ -67,7 +67,8 @@\n     string calldata aTokenSymbol,\n     bytes calldata params\n   ) external override initializer {\n-    require(initializingPool == POOL, Errors.POOL_ADDRESSES_DO_NOT_MATCH);\n+    /// RequireMutation(`initializingPool == POOL` |==> `true`) of: `require(initializingPool == POOL, Errors.POOL_ADDRESSES_DO_NOT_MATCH);`\n+    require(true, Errors.POOL_ADDRESSES_DO_NOT_MATCH);\n     _setName(aTokenName);\n     _setSymbol(aTokenSymbol);\n     _setDecimals(aTokenDecimals);\n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/36946/44f2c211ebaa4a938ba718b208ee1908?anonymousKey=69d42edb6ed320afd0cfb370125010bddf30cd35", "success": true, "run_directory": ".certora_internal/23_10_09_14_25_37_106/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/3/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/3", "id": "3", "diff": "--- original\n+++ mutant\n@@ -74,7 +74,8 @@\n \n     _treasury = treasury;\n     _underlyingAsset = underlyingAsset;\n-    _incentivesController = incentivesController;\n+    /// DeleteExpressionMutation(`_incentivesController = incentivesController` |==> `assert(true)`) of: `_incentivesController = incentivesController;`\n+    assert(true);\n \n     _domainSeparator = _calculateDomainSeparator();\n \n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/36946/ae0515749adb4894ac6c5f1f8b75483e?anonymousKey=4a9e3aaa12ea9f08608e843ea42ea867047c8917", "success": true, "run_directory": ".certora_internal/23_10_09_14_25_37_063/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/4/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/4", "id": "4", "diff": "--- original\n+++ mutant\n@@ -76,7 +76,8 @@\n     _underlyingAsset = underlyingAsset;\n     _incentivesController = incentivesController;\n \n-    _domainSeparator = _calculateDomainSeparator();\n+    /// AssignmentMutation(`_calculateDomainSeparator()` |==> `0`) of: `_domainSeparator = _calculateDomainSeparator();`\n+    _domainSeparator = 0;\n \n     emit Initialized(\n       underlyingAsset,\n", "description": "AssignmentMutation"}, "link": "https://prover.certora.com/jobStatus/36946/35bc554c3d1946fcaa7824ba19c3be74?anonymousKey=ce373f8a85f284ecf113c2e34fce276a62fcd3e9", "success": true, "run_directory": ".certora_internal/23_10_09_14_25_37_230/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/5/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/5", "id": "5", "diff": "--- original\n+++ mutant\n@@ -97,7 +97,8 @@\n     uint256 amount,\n     uint256 index\n   ) external virtual override onlyPool returns (bool) {\n-    revert(Errors.OPERATION_NOT_SUPPORTED);\n+    /// DeleteExpressionMutation(`revert(Errors.OPERATION_NOT_SUPPORTED)` |==> `assert(true)`) of: `revert(Errors.OPERATION_NOT_SUPPORTED);`\n+    assert(true);\n   }\n \n   /// @inheritdoc IAToken\n", "description": "DeleteExpressionMutation"}, "link": null, "success": true, "run_directory": null}, {"gambit_mutant": {"filename": "gambit_out/mutants/6/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/6", "id": "6", "diff": "--- original\n+++ mutant\n@@ -107,7 +107,8 @@\n     uint256 amount,\n     uint256 index\n   ) external virtual override onlyPool {\n-    revert(Errors.OPERATION_NOT_SUPPORTED);\n+    /// DeleteExpressionMutation(`revert(Errors.OPERATION_NOT_SUPPORTED)` |==> `assert(true)`) of: `revert(Errors.OPERATION_NOT_SUPPORTED);`\n+    assert(true);\n   }\n \n   /// @inheritdoc IAToken\n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/36946/9b084622b0004708a15ca3e582b4951e?anonymousKey=1705d3c8b6b7bc405ddf76f4aac9224c1779cc52", "success": true, "run_directory": ".certora_internal/23_10_09_14_25_37_744/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/7/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/7", "id": "7", "diff": "--- original\n+++ mutant\n@@ -112,7 +112,8 @@\n \n   /// @inheritdoc IAToken\n   function mintToTreasury(uint256 amount, uint256 index) external virtual override onlyPool {\n-    revert(Errors.OPERATION_NOT_SUPPORTED);\n+    /// DeleteExpressionMutation(`revert(Errors.OPERATION_NOT_SUPPORTED)` |==> `assert(true)`) of: `revert(Errors.OPERATION_NOT_SUPPORTED);`\n+    assert(true);\n   }\n \n   /// @inheritdoc IAToken\n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/36946/fd4c3fd8fae9479c9539d37a89ac2a51?anonymousKey=d83b6805082950c3562de641f810915e2695100f", "success": true, "run_directory": ".certora_internal/23_10_09_14_25_37_133/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/8/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/8", "id": "8", "diff": "--- original\n+++ mutant\n@@ -121,7 +121,8 @@\n     address to,\n     uint256 value\n   ) external virtual override onlyPool {\n-    revert(Errors.OPERATION_NOT_SUPPORTED);\n+    /// DeleteExpressionMutation(`revert(Errors.OPERATION_NOT_SUPPORTED)` |==> `assert(true)`) of: `revert(Errors.OPERATION_NOT_SUPPORTED);`\n+    assert(true);\n   }\n \n   /// @inheritdoc IERC20\n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/36946/fbab1d0cb7334027b3ce2edbc663d7b3?anonymousKey=f5f7af39abcc7851577fb4f3259a244042602b49", "success": true, "run_directory": ".certora_internal/23_10_09_14_25_37_618/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/9/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/9", "id": "9", "diff": "--- original\n+++ mutant\n@@ -154,7 +154,8 @@\n    * @param amount The amount getting transferred\n    */\n   function transferUnderlyingTo(address target, uint256 amount) external virtual override onlyPool {\n-    IGhoToken(_underlyingAsset).mint(target, amount);\n+    /// DeleteExpressionMutation(`IGhoToken(_underlyingAsset).mint(target, amount)` |==> `assert(true)`) of: `IGhoToken(_underlyingAsset).mint(target, amount);`\n+    assert(true);\n   }\n \n   /// @inheritdoc IAToken\n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/36946/ce2db7132563452cb26f914fe7a4d39b?anonymousKey=fd069f10fa5ba5f9832be42f94f97ff189fb21f7", "success": true, "run_directory": ".certora_internal/23_10_09_14_25_45_906/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/10/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/10", "id": "10", "diff": "--- original\n+++ mutant\n@@ -164,7 +164,8 @@\n     uint256 amount\n   ) external virtual override onlyPool {\n     uint256 balanceFromInterest = _ghoVariableDebtToken.getBalanceFromInterest(onBehalfOf);\n-    if (amount <= balanceFromInterest) {\n+    /// IfStatementMutation(`amount <= balanceFromInterest` |==> `true`) of: `if (amount <= balanceFromInterest) {`\n+    if (true) {\n       _ghoVariableDebtToken.decreaseBalanceFromInterest(onBehalfOf, amount);\n     } else {\n       _ghoVariableDebtToken.decreaseBalanceFromInterest(onBehalfOf, balanceFromInterest);\n", "description": "IfStatementMutation"}, "link": "https://prover.certora.com/jobStatus/36946/7b9bc9676f954cc79644bdf051910501?anonymousKey=671fb8bd30a392b1a73cb5d129b9436dfc9965c5", "success": true, "run_directory": ".certora_internal/23_10_09_14_26_25_085/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/11/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/11", "id": "11", "diff": "--- original\n+++ mutant\n@@ -167,7 +167,8 @@\n     if (amount <= balanceFromInterest) {\n       _ghoVariableDebtToken.decreaseBalanceFromInterest(onBehalfOf, amount);\n     } else {\n-      _ghoVariableDebtToken.decreaseBalanceFromInterest(onBehalfOf, balanceFromInterest);\n+      /// DeleteExpressionMutation(`_ghoVariableDebtToken.decreaseBalanceFromInterest(onBehalfOf, balanceFromInterest)` |==> `assert(true)`) of: `_ghoVariableDebtToken.decreaseBalanceFromInterest(onBehalfOf, balanceFromInterest);`\n+      assert(true);\n       IGhoToken(_underlyingAsset).burn(amount - balanceFromInterest);\n     }\n   }\n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/36946/fedf5c1c9d294004b066dde42d91ca64?anonymousKey=16c7731b630c462f65521b680404007f54ca1cc6", "success": true, "run_directory": ".certora_internal/23_10_09_14_26_25_974/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/12/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/12", "id": "12", "diff": "--- original\n+++ mutant\n@@ -168,7 +168,8 @@\n       _ghoVariableDebtToken.decreaseBalanceFromInterest(onBehalfOf, amount);\n     } else {\n       _ghoVariableDebtToken.decreaseBalanceFromInterest(onBehalfOf, balanceFromInterest);\n-      IGhoToken(_underlyingAsset).burn(amount - balanceFromInterest);\n+      /// DeleteExpressionMutation(`IGhoToken(_underlyingAsset).burn(amount - balanceFromInterest)` |==> `assert(true)`) of: `IGhoToken(_underlyingAsset).burn(amount - balanceFromInterest);`\n+      assert(true);\n     }\n   }\n \n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/36946/849bdad55585430f9e2b8f8ef197b1af?anonymousKey=05e678ca6f8cbeb404acc830365f7e7c7f95faef", "success": true, "run_directory": ".certora_internal/23_10_09_14_26_25_482/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/13/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/13", "id": "13", "diff": "--- original\n+++ mutant\n@@ -168,7 +168,8 @@\n       _ghoVariableDebtToken.decreaseBalanceFromInterest(onBehalfOf, amount);\n     } else {\n       _ghoVariableDebtToken.decreaseBalanceFromInterest(onBehalfOf, balanceFromInterest);\n-      IGhoToken(_underlyingAsset).burn(amount - balanceFromInterest);\n+      /// BinaryOpMutation(`-` |==> `+`) of: `IGhoToken(_underlyingAsset).burn(amount - balanceFromInterest);`\n+      IGhoToken(_underlyingAsset).burn(amount+balanceFromInterest);\n     }\n   }\n \n", "description": "BinaryOpMutation"}, "link": "https://prover.certora.com/jobStatus/36946/6cccb88eeff74ded9005aecaa8b3d0f7?anonymousKey=f04e8e0a14ceb93ba4e83f835073c7e2a3f86a22", "success": true, "run_directory": ".certora_internal/23_10_09_14_26_26_805/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/14/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/14", "id": "14", "diff": "--- original\n+++ mutant\n@@ -168,7 +168,8 @@\n       _ghoVariableDebtToken.decreaseBalanceFromInterest(onBehalfOf, amount);\n     } else {\n       _ghoVariableDebtToken.decreaseBalanceFromInterest(onBehalfOf, balanceFromInterest);\n-      IGhoToken(_underlyingAsset).burn(amount - balanceFromInterest);\n+      /// BinaryOpMutation(`-` |==> `*`) of: `IGhoToken(_underlyingAsset).burn(amount - balanceFromInterest);`\n+      IGhoToken(_underlyingAsset).burn(amount*balanceFromInterest);\n     }\n   }\n \n", "description": "BinaryOpMutation"}, "link": "https://prover.certora.com/jobStatus/36946/aa057dc2b2354a1b8ccb65d4607c5df6?anonymousKey=bf5c09cfc4ac7e6ad9b00b6b8002d6eea45d91d4", "success": true, "run_directory": ".certora_internal/23_10_09_14_26_26_977/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/15/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/15", "id": "15", "diff": "--- original\n+++ mutant\n@@ -168,7 +168,8 @@\n       _ghoVariableDebtToken.decreaseBalanceFromInterest(onBehalfOf, amount);\n     } else {\n       _ghoVariableDebtToken.decreaseBalanceFromInterest(onBehalfOf, balanceFromInterest);\n-      IGhoToken(_underlyingAsset).burn(amount - balanceFromInterest);\n+      /// BinaryOpMutation(`-` |==> `%`) of: `IGhoToken(_underlyingAsset).burn(amount - balanceFromInterest);`\n+      IGhoToken(_underlyingAsset).burn(amount%balanceFromInterest);\n     }\n   }\n \n", "description": "BinaryOpMutation"}, "link": "https://prover.certora.com/jobStatus/36946/7199c9f75f1d497a9ba3a8daac140d86?anonymousKey=9ca17b2e5b0985699319964e458b06fe74514475", "success": true, "run_directory": ".certora_internal/23_10_09_14_26_27_025/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/16/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/16", "id": "16", "diff": "--- original\n+++ mutant\n@@ -168,7 +168,8 @@\n       _ghoVariableDebtToken.decreaseBalanceFromInterest(onBehalfOf, amount);\n     } else {\n       _ghoVariableDebtToken.decreaseBalanceFromInterest(onBehalfOf, balanceFromInterest);\n-      IGhoToken(_underlyingAsset).burn(amount - balanceFromInterest);\n+      /// BinaryOpMutation(`-` |==> `**`) of: `IGhoToken(_underlyingAsset).burn(amount - balanceFromInterest);`\n+      IGhoToken(_underlyingAsset).burn(amount**balanceFromInterest);\n     }\n   }\n \n", "description": "BinaryOpMutation"}, "link": "https://prover.certora.com/jobStatus/36946/933b7028c5ea47f8a83bd856f482c265?anonymousKey=d0778b1d7c6f65d947a595d791b27e2dd3e1ac1b", "success": true, "run_directory": ".certora_internal/23_10_09_14_26_27_596/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/17/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/17", "id": "17", "diff": "--- original\n+++ mutant\n@@ -168,7 +168,8 @@\n       _ghoVariableDebtToken.decreaseBalanceFromInterest(onBehalfOf, amount);\n     } else {\n       _ghoVariableDebtToken.decreaseBalanceFromInterest(onBehalfOf, balanceFromInterest);\n-      IGhoToken(_underlyingAsset).burn(amount - balanceFromInterest);\n+      /// SwapArgumentsOperatorMutation(`amount - balanceFromInterest` |==> `balanceFromInterest - amount`) of: `IGhoToken(_underlyingAsset).burn(amount - balanceFromInterest);`\n+      IGhoToken(_underlyingAsset).burn(balanceFromInterest - amount);\n     }\n   }\n \n", "description": "SwapArgumentsOperatorMutation"}, "link": "https://prover.certora.com/jobStatus/36946/b03c5c35024547d1a534b35f21b18bd2?anonymousKey=ab85746cc03cbefc03e27a052594f41df69f4b3b", "success": true, "run_directory": ".certora_internal/23_10_09_14_26_31_957/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/18/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/18", "id": "18", "diff": "--- original\n+++ mutant\n@@ -175,7 +175,8 @@\n   /// @inheritdoc IGhoFacilitator\n   function distributeFeesToTreasury() external virtual override {\n     uint256 balance = IERC20(_underlyingAsset).balanceOf(address(this));\n-    IERC20(_underlyingAsset).transfer(_ghoTreasury, balance);\n+    /// DeleteExpressionMutation(`IERC20(_underlyingAsset).transfer(_ghoTreasury, balance)` |==> `assert(true)`) of: `IERC20(_underlyingAsset).transfer(_ghoTreasury, balance);`\n+    assert(true);\n     emit FeesDistributedToTreasury(_ghoTreasury, _underlyingAsset, balance);\n   }\n \n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/36946/333846a750214f42bf44365a765be1aa?anonymousKey=71bd6fb6d9fbf952c0aa9e816de69aa936c3b610", "success": true, "run_directory": ".certora_internal/23_10_09_14_27_01_422/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/19/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/19", "id": "19", "diff": "--- original\n+++ mutant\n@@ -189,7 +189,8 @@\n     bytes32 r,\n     bytes32 s\n   ) external override {\n-    revert(Errors.OPERATION_NOT_SUPPORTED);\n+    /// DeleteExpressionMutation(`revert(Errors.OPERATION_NOT_SUPPORTED)` |==> `assert(true)`) of: `revert(Errors.OPERATION_NOT_SUPPORTED);`\n+    assert(true);\n   }\n \n   /**\n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/36946/9e8b238cb8874316872331477c35c3a8?anonymousKey=d96469399a176d5a12b6afe62781b5442e59235c", "success": true, "run_directory": ".certora_internal/23_10_09_14_27_02_197/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/20/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/20", "id": "20", "diff": "--- original\n+++ mutant\n@@ -199,7 +199,8 @@\n    * @param amount The amount getting transferred\n    */\n   function _transfer(address from, address to, uint128 amount) internal override {\n-    revert(Errors.OPERATION_NOT_SUPPORTED);\n+    /// DeleteExpressionMutation(`revert(Errors.OPERATION_NOT_SUPPORTED)` |==> `assert(true)`) of: `revert(Errors.OPERATION_NOT_SUPPORTED);`\n+    assert(true);\n   }\n \n   /**\n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/36946/ae22187a63b84ba28fc0f482e1659380?anonymousKey=de222b91528ca20aa73bd7b633687eca7851d59c", "success": true, "run_directory": ".certora_internal/23_10_09_14_27_02_358/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/21/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/21", "id": "21", "diff": "--- original\n+++ mutant\n@@ -225,7 +225,8 @@\n \n   /// @inheritdoc IAToken\n   function rescueTokens(address token, address to, uint256 amount) external override onlyPoolAdmin {\n-    require(token != _underlyingAsset, Errors.UNDERLYING_CANNOT_BE_RESCUED);\n+    /// RequireMutation(`token != _underlyingAsset` |==> `true`) of: `require(token != _underlyingAsset, Errors.UNDERLYING_CANNOT_BE_RESCUED);`\n+    require(true, Errors.UNDERLYING_CANNOT_BE_RESCUED);\n     IERC20(token).safeTransfer(to, amount);\n   }\n \n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/36946/9b5c1b1d40a14a939cf15a3b795346e4?anonymousKey=c6b4cff2e0e7fc43ceda914e70669cb237772bcb", "success": true, "run_directory": ".certora_internal/23_10_09_14_27_02_146/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/22/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/22", "id": "22", "diff": "--- original\n+++ mutant\n@@ -225,7 +225,8 @@\n \n   /// @inheritdoc IAToken\n   function rescueTokens(address token, address to, uint256 amount) external override onlyPoolAdmin {\n-    require(token != _underlyingAsset, Errors.UNDERLYING_CANNOT_BE_RESCUED);\n+    /// RequireMutation(`token != _underlyingAsset` |==> `false`) of: `require(token != _underlyingAsset, Errors.UNDERLYING_CANNOT_BE_RESCUED);`\n+    require(false, Errors.UNDERLYING_CANNOT_BE_RESCUED);\n     IERC20(token).safeTransfer(to, amount);\n   }\n \n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/36946/ebbfae6cd7484f05beda08b6b29f8ae7?anonymousKey=9e574dd4e074b675fa21d898477c18bdb9bc3af5", "success": true, "run_directory": ".certora_internal/23_10_09_14_27_03_328/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/23/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/23", "id": "23", "diff": "--- original\n+++ mutant\n@@ -226,7 +226,8 @@\n   /// @inheritdoc IAToken\n   function rescueTokens(address token, address to, uint256 amount) external override onlyPoolAdmin {\n     require(token != _underlyingAsset, Errors.UNDERLYING_CANNOT_BE_RESCUED);\n-    IERC20(token).safeTransfer(to, amount);\n+    /// DeleteExpressionMutation(`IERC20(token).safeTransfer(to, amount)` |==> `assert(true)`) of: `IERC20(token).safeTransfer(to, amount);`\n+    assert(true);\n   }\n \n   /// @inheritdoc IGhoAToken\n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/36946/c2b1cb570fff4f72b2c62b9172095f39?anonymousKey=69a87cf546adfaa2cc45078964ad5fa896511b2e", "success": true, "run_directory": ".certora_internal/23_10_09_14_27_04_851/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/24/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/24", "id": "24", "diff": "--- original\n+++ mutant\n@@ -231,7 +231,8 @@\n \n   /// @inheritdoc IGhoAToken\n   function setVariableDebtToken(address ghoVariableDebtToken) external override onlyPoolAdmin {\n-    require(address(_ghoVariableDebtToken) == address(0), 'VARIABLE_DEBT_TOKEN_ALREADY_SET');\n+    /// DeleteExpressionMutation(`require(address(_ghoVariableDebtToken) == address(0), 'VARIABLE_DEBT_TOKEN_ALREADY_SET')` |==> `assert(true)`) of: `require(address(_ghoVariableDebtToken) == address(0), 'VARIABLE_DEBT_TOKEN_ALREADY_SET');`\n+    assert(true);\n     require(ghoVariableDebtToken != address(0), 'ZERO_ADDRESS_NOT_VALID');\n     _ghoVariableDebtToken = GhoVariableDebtToken(ghoVariableDebtToken);\n     emit VariableDebtTokenSet(ghoVariableDebtToken);\n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/36946/7384ed5e05c8484db05d9305ed63466c?anonymousKey=079f723513c365960bd85c1264d66b0339b930e1", "success": true, "run_directory": ".certora_internal/23_10_09_14_27_04_777/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/25/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/25", "id": "25", "diff": "--- original\n+++ mutant\n@@ -231,7 +231,8 @@\n \n   /// @inheritdoc IGhoAToken\n   function setVariableDebtToken(address ghoVariableDebtToken) external override onlyPoolAdmin {\n-    require(address(_ghoVariableDebtToken) == address(0), 'VARIABLE_DEBT_TOKEN_ALREADY_SET');\n+    /// RequireMutation(`address(_ghoVariableDebtToken) == address(0)` |==> `false`) of: `require(address(_ghoVariableDebtToken) == address(0), 'VARIABLE_DEBT_TOKEN_ALREADY_SET');`\n+    require(false, 'VARIABLE_DEBT_TOKEN_ALREADY_SET');\n     require(ghoVariableDebtToken != address(0), 'ZERO_ADDRESS_NOT_VALID');\n     _ghoVariableDebtToken = GhoVariableDebtToken(ghoVariableDebtToken);\n     emit VariableDebtTokenSet(ghoVariableDebtToken);\n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/36946/f6b13556936446f6a555b94e73bc4c16?anonymousKey=bd7db1a87db6952680ea34575a01a18fde2de7cc", "success": true, "run_directory": ".certora_internal/23_10_09_14_27_08_472/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/26/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/26", "id": "26", "diff": "--- original\n+++ mutant\n@@ -232,7 +232,8 @@\n   /// @inheritdoc IGhoAToken\n   function setVariableDebtToken(address ghoVariableDebtToken) external override onlyPoolAdmin {\n     require(address(_ghoVariableDebtToken) == address(0), 'VARIABLE_DEBT_TOKEN_ALREADY_SET');\n-    require(ghoVariableDebtToken != address(0), 'ZERO_ADDRESS_NOT_VALID');\n+    /// RequireMutation(`ghoVariableDebtToken != address(0)` |==> `true`) of: `require(ghoVariableDebtToken != address(0), 'ZERO_ADDRESS_NOT_VALID');`\n+    require(true, 'ZERO_ADDRESS_NOT_VALID');\n     _ghoVariableDebtToken = GhoVariableDebtToken(ghoVariableDebtToken);\n     emit VariableDebtTokenSet(ghoVariableDebtToken);\n   }\n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/36946/3a7d025fd36d448e858f19a8b0145d5a?anonymousKey=ee9dacde1071d427ad35ca6cd240f9030495eca2", "success": true, "run_directory": ".certora_internal/23_10_09_14_27_35_031/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/27/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/27", "id": "27", "diff": "--- original\n+++ mutant\n@@ -232,7 +232,8 @@\n   /// @inheritdoc IGhoAToken\n   function setVariableDebtToken(address ghoVariableDebtToken) external override onlyPoolAdmin {\n     require(address(_ghoVariableDebtToken) == address(0), 'VARIABLE_DEBT_TOKEN_ALREADY_SET');\n-    require(ghoVariableDebtToken != address(0), 'ZERO_ADDRESS_NOT_VALID');\n+    /// RequireMutation(`ghoVariableDebtToken != address(0)` |==> `false`) of: `require(ghoVariableDebtToken != address(0), 'ZERO_ADDRESS_NOT_VALID');`\n+    require(false, 'ZERO_ADDRESS_NOT_VALID');\n     _ghoVariableDebtToken = GhoVariableDebtToken(ghoVariableDebtToken);\n     emit VariableDebtTokenSet(ghoVariableDebtToken);\n   }\n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/36946/154a2d5322cc4a7099f0764224dfe9b2?anonymousKey=ec87a0916f5775fc68ecc174945bc87ee7a72808", "success": true, "run_directory": ".certora_internal/23_10_09_14_27_36_157/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/28/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/28", "id": "28", "diff": "--- original\n+++ mutant\n@@ -233,7 +233,8 @@\n   function setVariableDebtToken(address ghoVariableDebtToken) external override onlyPoolAdmin {\n     require(address(_ghoVariableDebtToken) == address(0), 'VARIABLE_DEBT_TOKEN_ALREADY_SET');\n     require(ghoVariableDebtToken != address(0), 'ZERO_ADDRESS_NOT_VALID');\n-    _ghoVariableDebtToken = GhoVariableDebtToken(ghoVariableDebtToken);\n+    /// DeleteExpressionMutation(`_ghoVariableDebtToken = GhoVariableDebtToken(ghoVariableDebtToken)` |==> `assert(true)`) of: `_ghoVariableDebtToken = GhoVariableDebtToken(ghoVariableDebtToken);`\n+    assert(true);\n     emit VariableDebtTokenSet(ghoVariableDebtToken);\n   }\n \n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/36946/496fa96ef9084e57bd564a8d3cf93f72?anonymousKey=d50b4010cbdfea390693fa89f8b750e57911516a", "success": true, "run_directory": ".certora_internal/23_10_09_14_27_37_073/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/29/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/29", "id": "29", "diff": "--- original\n+++ mutant\n@@ -244,7 +244,8 @@\n \n   /// @inheritdoc IGhoFacilitator\n   function updateGhoTreasury(address newGhoTreasury) external override onlyPoolAdmin {\n-    require(newGhoTreasury != address(0), 'ZERO_ADDRESS_NOT_VALID');\n+    /// DeleteExpressionMutation(`require(newGhoTreasury != address(0), 'ZERO_ADDRESS_NOT_VALID')` |==> `assert(true)`) of: `require(newGhoTreasury != address(0), 'ZERO_ADDRESS_NOT_VALID');`\n+    assert(true);\n     address oldGhoTreasury = _ghoTreasury;\n     _ghoTreasury = newGhoTreasury;\n     emit GhoTreasuryUpdated(oldGhoTreasury, newGhoTreasury);\n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/36946/e8ddf105372e473c90221cd206e23fe5?anonymousKey=aefd4ee52ca3b37e84eaedfc861647f08fd17308", "success": true, "run_directory": ".certora_internal/23_10_09_14_27_38_986/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/30/src/contracts/facilitators/aave/tokens/GhoAToken.sol", "original_filename": "src/contracts/facilitators/aave/tokens/GhoAToken.sol", "directory": "gambit_out/mutants/30", "id": "30", "diff": "--- original\n+++ mutant\n@@ -244,7 +244,8 @@\n \n   /// @inheritdoc IGhoFacilitator\n   function updateGhoTreasury(address newGhoTreasury) external override onlyPoolAdmin {\n-    require(newGhoTreasury != address(0), 'ZERO_ADDRESS_NOT_VALID');\n+    /// RequireMutation(`newGhoTreasury != address(0)` |==> `false`) of: `require(newGhoTreasury != address(0), 'ZERO_ADDRESS_NOT_VALID');`\n+    require(false, 'ZERO_ADDRESS_NOT_VALID');\n     address oldGhoTreasury = _ghoTreasury;\n     _ghoTreasury = newGhoTreasury;\n     emit GhoTreasuryUpdated(oldGhoTreasury, newGhoTreasury);\n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/36946/6a90b3b4f1804cb0a92a769952b4ac37?anonymousKey=4836fe06e27dc6414ad07a79ac9819512707c3df", "success": true, "run_directory": ".certora_internal/23_10_09_14_27_40_006/.certora_sources"}]}